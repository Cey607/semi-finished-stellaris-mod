sk_create_country = {
	create_country = {
		name = random
		type = default
		ignore_initial_colony_error = yes
		day_zero_contact = no
		species = last_created_species
		ethos = random
		authority = auth_democratic
		civics = random
		flag = random
		origin = origin_separatists
		effect = {
			modify_species = {
				species = this
				add_traits_at_start_of_list = yes
			}
			add_modifier = {
				modifier = sk_uprising
				days = 1800
			}
			save_event_target_as = current_uprising
		}
	}
}
create_sk_marauder_fleet = {
	create_leader = {
		class = commander
		species = owner_main_species
		name = random
		skill = 3
		leader_age_min = 25
		leader_age_max = 45
		traits = {
			0 = leader_trait_mercenary_warrior
		}
	}
	create_fleet = {
		effect = {
			set_owner = prev.controller
			set_location = prev.controller.capital_scope
			while = {
				count = 16
				create_ship = {
					name = random
					design = "NAME_Outrider"
					prefix = no
					graphical_culture = "pirate_01"
				}
			}
			while = {
				count = 8
				create_ship = {
					name = random
					design = "NAME_Lancer"
					prefix = no
					graphical_culture = "pirate_01"
				}
			}
			while = {
				count = 6
				create_ship = {
					name = random
					design = "NAME_Void_Champion"
					prefix = no
					graphical_culture = "pirate_01"
				}
			}
			while = {
				count = 1
				create_ship = {
					name = random
					design = "NAME_Ancestral_Glory"
					prefix = no
					graphical_culture = "pirate_01"
				}
			}
			assign_leader = last_created_leader
		}
		settings = {
			uses_naval_capacity = no
			can_upgrade = no
			can_change_composition = no
		}
	}
}
create_sk_marauder_constructors = {
	create_fleet = {
		effect = {
			set_owner = prev.controller
			set_location = prev.controller.capital_scope
			create_ship = {
				name = random
				design = "NAME_Clan_Builder"
			}
		}
	}
}


create_sk_warship_fleet = {
	create_leader = {
		class = commander
		species = root.owner_main_species
		name = RANDOM
		event_leader = yes
		skill = 10
		set_age = 0
		traits = {
			trait = leader_trait_artillery_specialization_3
			trait = leader_trait_master_gunner
			trait = leader_trait_commanding_presence_3
			trait = leader_trait_artillerist_3
			trait = leader_trait_eater_chosen
		}
	}
	create_fleet = {
		name = "鬿"
		settings = {
			uses_naval_capacity = no
			spawn_debris = no
			can_change_leader = no
		}
		effect = {
			save_global_event_target_as = sk_fleet
			set_owner = prev
			set_location = {
				target = root.capital_scope
				distance = 10
				angle = random
			}
			create_ship = {
				name = random
				design = "鬿IV"
				prefix = no
				upgradable = no
			}
			while = {
				count = 20
				create_ship = {
					name = random
					design = "鬿III"
					prefix = no
					upgradable = no
				}
			}
			# while = {
			# 	count = 9
			# 	create_ship = {
			# 		name = random
			# 		design = "鬿II"
			# 		prefix = no
			# 		upgradable = no
			# 	}
			# }
			add_modifier = {
				modifier = ship_rank_elite
				days = -1
			}
			assign_leader = last_created_leader
		}
	}
}
#自动检测，数值膨胀也会跟随，魔怔mod会! 卡! 爆!
create_sk_pirate_fleet_2 = { #根据输入 FLEET_POWER 动态生成舰队
	set_variable = {
		which = var_fleet_power
		value = $FLEET_POWER$
	}	
	if = {
		limit = {
			check_variable = {
				which = var_fleet_power
				value <= 19000
			}
		}
		change_variable = { #保证不为0，之后可以向上进位
			which = var_fleet_power
			value = 1
		}
		divide_variable = {
			which = var_fleet_power
			value = 3000
		}
		ceiling_variable = var_fleet_power #至少生成一个
		while = { #3k
			count = var_fleet_power
			create_ship = {
				name = random
				design = "NAME_Sterilizer"
				graphical_culture = "ai_01"
			}
		}
	}
	else_if = {
		limit = {
			check_variable = {
				which = var_fleet_power
				value <= 45000
				#value >= 4000
			}
		}
		divide_variable = {
			which = var_fleet_power
			value = 19000
		}
		floor_variable = var_fleet_power
		while = { #400
			count = var_fleet_power
			while = { #3k
				count = 3
				create_ship = {
					name = random
					design = "NAME_Sterilizer"
					graphical_culture = "ai_01"
				}
			}
			while = {#10k
				count = 1 
				create_ship = {
					name = random
					design = "NAME_Euthanizer"
					graphical_culture = "ai_01"
				}
			}	
		}	
	}
	else_if = {
		limit = {
			check_variable = {
				which = var_fleet_power
				value <= 200000
				#value >= 9600
			}
		}
		divide_variable = {
			which = var_fleet_power
			value = 45000
		}
		floor_variable = var_fleet_power
		while = { #400
			count = var_fleet_power
			while = { #3k
				count = 5
				create_ship = {
					name = random
					design = "NAME_Sterilizer"
					graphical_culture = "ai_01"
				}
			}
			while = {#10k
				count = 3 
				create_ship = {
					name = random
					design = "NAME_Euthanizer"
					graphical_culture = "ai_01"
				}
			}
		}
	}
	else_if = { #超过300k舰队就少生成小船，卡的批爆
		limit = {
			check_variable = {
				which = var_fleet_power
				value >= 300000
			}
		}
		divide_variable = {
			which = var_fleet_power
			value = 59000
		}
		floor_variable = var_fleet_power
		while = { 
			count = var_fleet_power
			while = { #3k
				count = 3
				create_ship = {
					name = random
					design = "NAME_Sterilizer"
					graphical_culture = "ai_01"
				}
			}
			while = {#10k
				count = 5 
				create_ship = {
					name = random
					design = "NAME_Euthanizer"
					graphical_culture = "ai_01"
				}
			}	
		}
	}
}
create_sk_pirate_fleet = { #0 40 60 80年4级实力 ### 废弃
	set_owner = event_target:sk_pirate_band
	if = {
		limit = { years_passed < 30 }
		while = {
			count = 0
			create_ship = {
				name = random
				design = "NAME_Wraith"
				graphical_culture = "extra_dimensional_01"
			}
		}
		while = {
			count = 1
			create_ship = {
				name = random
				design = "NAME_Phantom"
				graphical_culture = "extra_dimensional_01"
			}
		}
		while = {
			count = 1
			create_ship = {
				name = random
				design = "NAME_Revenant"
				graphical_culture = "extra_dimensional_01"
			}
		}
	}
	# 30 years into game, less than 60
	else_if = {
		limit = {
			years_passed < 60
		}
		while = {
			count = 15
			create_ship = {
				name = random
				design = "NAME_Wraith"
				graphical_culture = "extra_dimensional_01"
			}
		}
		while = {
			count = 3
			create_ship = {
				name = random
				design = "NAME_Phantom"
				graphical_culture = "extra_dimensional_01"
			}
		}
		while = {
			count = 1
			create_ship = {
				name = random
				design = "NAME_Revenant"
				graphical_culture = "extra_dimensional_01"
			}
		}
	}
	# 60 years into game, less than 80
	else_if = {
		limit = {
			years_passed < 80
		}
		while = {
			count = 18
			create_ship = {
				name = random
				design = "NAME_Wraith"
				graphical_culture = "extra_dimensional_01"
			}
		}
		while = {
			count = 6
			create_ship = {
				name = random
				design = "NAME_Phantom"
				graphical_culture = "extra_dimensional_01"
			}
		}
		while = {
			count = 2
			create_ship = {
				name = random
				design = "NAME_Revenant"
				graphical_culture = "extra_dimensional_01"
			}
		}
	}
	# 80 years into game
	else = {
		while = {
			count = 24
			create_ship = {
				name = random
				design = "NAME_Wraith"
				graphical_culture = "extra_dimensional_01"
			}
		}
		while = {
			count = 6
			create_ship = {
				name = random
				design = "NAME_Phantom"
				graphical_culture = "extra_dimensional_01"
			}
		}
		while = {
			count = 4
			create_ship = {
				name = random
				design = "NAME_Revenant"
				graphical_culture = "extra_dimensional_01"
			}
		}
		create_ship = {
			name = random
			design = NAME_Constructor
		}
		#set_fleet_flag = marauder_raider_fleet_
	}
	set_location = event_target:sk_pirate_home
	set_fleet_stance = aggressive
	assign_leader = last_created_leader
	set_aggro_range = 500
	set_aggro_range_measure_from = self
	set_fleet_bombardment_stance = sk_armageddon
	#auto_move_to_planet = {
	#	target = event_target:sk_target_capital
	#	clear_auto_move_on_arrival = yes
	#	arrival_effect = thalassocracy_patrol
	#}				
}
# 一级亚空间城邦突触防御站（五级循环大概60k）
create_sk_pirate_base_1 = {
	create_fleet = {
		name = "NAME_sk_Pirate_Station"
		settings = {
			can_upgrade = no
			spawn_debris = no
			can_change_leader = no
		}
		effect = {
			set_owner = event_target:sk_pirate_band
			create_ship = {
				name = random
				design = "魊I"
			}
			set_location = event_target:sk_pirate_home
		}
	}
}
create_sk_pirate_base_2 = {
	create_fleet = {
		name = "NAME_sk_Pirate_Station"
		settings = {
			can_upgrade = no
			spawn_debris = no
			can_change_leader = no
		}
		effect = {
			set_owner = event_target:sk_pirate_band
			create_ship = {
				name = random
				design = "魊II"
			}
			set_location = event_target:sk_pirate_home
		}
	}
}

#图图除玩家之外的全部普通国家。保留堕落游牧之类的
sk_destroy_all = {
	every_country = {
		if = {
			limit = { 
				is_ai = yes
				is_country_type = default
				NOT = {
					has_country_flag = sk_pftl
				}
			}
			country_event = {
				id = fallen_machine_empire.3
			}
		}
		else_if = {
			limit = {
				is_ai = yes
				is_country_type = default
				has_country_flag = sk_pftl
			}
			country_event = {
				id = fallen_machine_empire.3
			}
			this.capital_scope = {
				change_pc = pc_barren
			}
		}
	}
}

#记录pre_ftl总数 提升一半的pftl并补充
sk_primitive_achieve_ftl = {
	export_trigger_value_to_variable = {
		trigger = count_country
		parameters = {
			limit = {
				is_country_type = primitive
			}
		}
		variable = var_pftl_country_number
	}
	divide_variable = {
		which = var_pftl_country_number
		value = 2
	}
	round_variable = var_pftl_country_number

	if = {
		limit = {
			check_variable = {
				which = var_pftl_country_number
				value <= 4
			}
		}
		while = {
			count = 5
			random_galaxy_planet = {
				limit = {
					num_pops = 0
					has_owner = no
				}
				change_pc = pc_gaia
				generate_pre_ftls_on_planet = yes
				set_planet_flag = sk_ftl_changed_gaia
				add_modifier = { modifier = sk_planet_modifier_temp }
			}
		}
	}
	else_if = {
		limit = {
			check_variable = {
				which = var_pftl_country_number
				value > 4
				value <= 7
			}
		}
		while = {
			count = var_pftl_country_number
			random_galaxy_planet = {
				limit = {
					num_pops = 0
					has_owner = no
				}
				change_pc = pc_gaia
				generate_pre_ftls_on_planet = yes
				set_planet_flag = sk_ftl_changed_gaia
				add_modifier = { modifier = sk_planet_modifier_temp }
			}
		}
	}
	else_if = {
		limit = {
			check_variable = {
				which = var_pftl_country_number
				value > 7
			}
		}
		while = {
			count = 7
			random_galaxy_planet = {
				limit = {
					num_pops = 0
					has_owner = no
				}
				change_pc = pc_gaia
				generate_pre_ftls_on_planet = yes
				set_planet_flag = sk_ftl_changed_gaia
				add_modifier = { modifier = sk_planet_modifier_temp }
			}
		}
	}
	while = {
		count = var_pftl_country_number
		random_country = {
			limit = { is_country_type = primitive }
			if = {
				limit = {
					this.capital_scope = {
						NOT = { has_planet_flag = sk_ftl_changed_gaia }
					}
				}
				sk_achieve_ftl_effect = {
					PRE_FTL = this
				}
			}
			else_if = {
				limit = { 
					this.capital_scope = {
						has_planet_flag = sk_ftl_changed_gaia
					}
				}
				this.capital_scope = {
					if = {
						limit = { has_modifier = sk_planet_modifier_temp }
						remove_modifier = sk_planet_modifier_temp
						add_modifier = { modifier = sk_planet_modifier_temp days = 7300 }
					}	
				}
				set_country_flag = sk_pftl
				sk_achieve_ftl_effect = {
					PRE_FTL = this
				}
			}
		}
	}
	clear_variable = var_pftl_country_number
}

#修改了原版achieve ftl effect的scope错误（谁家好人随便用root啊）
sk_achieve_ftl_effect = {
	country_event = {
		id = game_start.8
	}
	remove_country_flag = early_space_age
	set_country_flag = primitives_can_into_space
	set_country_type = default
	change_country_flag = random
	set_species_graphical_culture = yes
	change_government = {
		authority = random
		civics = random
	}
	set_name = random
	if = {
		limit = {
			has_country_flag = was_enlightened
			has_origin = origin_default_pre_ftl
		}
		set_origin = origin_enlightened
	}
	if = {
		limit = {
			has_origin = origin_default_pre_ftl
		}
		set_origin = origin_default
		if = {
			limit = {
				is_gestalt = no
			}
			capital_scope = {
				add_modifier = {
					modifier = prosp_uni_mod
					days = 7200
				}
			}
		}
		else = {
			capital_scope = {
				add_modifier = {
					modifier = prosp_uni_mod_gestalt
					days = 7200
				}
			}
		}
		capital_scope = {
			while = {
				count = 4
				create_pop = {
					species = owner
				}
			}
		}
	}
	add_resource = {
		energy = 500
		minerals = 500
		alloys = 125
		influence = 50
		unity = 250
		volatile_motes = 50
		exotic_gases = 50
		rare_crystals = 50
		mult = trigger:years_passed
	}
	if = {
		limit = {
			is_hive_empire = no
		}
		add_resource = {
			consumer_goods = 250
			mult = trigger:years_passed
		}
	}
	if = {
		limit = {
			is_lithoid_empire = no
		}
		add_resource = {
			food = 500
			mult = trigger:years_passed
		}
	}
	else = {
		add_resource = {
			minerals = 500
			mult = trigger:years_passed
		}
	}
	create_fleet = {
		effect = {
			set_owner = prev
			create_ship = {
				name = random
				random_existing_design = science
			}
			set_fleet_stance = evasive
			set_location = prev.capital_scope.star
			owner = {
				create_leader = {
					class = scientist
					sub_type = survey
					name = random
					species = owner_main_species
				}
			}
			set_leader = last_created_leader
		}
	}
	if = {
		limit = {
			is_gestalt = yes
		}
		country_event = {
			id = game_start.70
		}
		#Sets up gestalt council
	}
	else = {
		country_event = {
			id = game_start.72
		}
		#Sets up regular council
	}
	country_event = {
		id = game_start.71
	}
	#Sets up planet governor
	create_fleet = {
		effect = {
			set_owner = prev
			create_ship = {
				name = random
				random_existing_design = constructor
			}
			set_fleet_stance = evasive
			set_location = prev.capital_star
		}
	}
	capital_scope = {
		clear_blockers = yes
		remove_all_buildings = yes
		if = {
			limit = {
				NOT = {
					is_planet_class = pc_habitat
				}
			}
			generate_start_buildings_and_districts = yes
		}
		else_if = {
			limit = {
				is_planet_class = pc_habitat
			}
			owner = {
				give_technology = {
					tech = tech_habitat_1
					message = no
				}
				add_research_option = tech_habitat_2
				if = {
					limit = {
						OR = {
							is_lithoid_empire = no
							is_catalytic_empire = yes
						}
					}
					give_technology = {
						tech = tech_eco_simulation
						message = no
					}
					give_technology = {
						tech = tech_hydroponics
						message = no
					}
				}
				else = {
					give_technology = {
						tech = tech_powered_exoskeletons
						message = no
					}
					give_technology = {
						tech = tech_space_mining_1
						message = no
					}
				}
			}
			add_building = building_hab_major_capital
			# 2 jobs
			if = {
				limit = {
					owner = {
						is_lithoid_empire = no
					}
				}
				add_building = building_hydroponics_farm
			}
			# 2 jobs
			add_district = district_hab_science
			# 2 jobs
			if = {
				limit = {
					owner = {
						is_spiritualist = no
					}
				}
				add_building = building_bureaucratic_1
			}
			# 2 jobs
			if = {
				limit = {
					owner = {
						is_spiritualist = yes
						OR = {
							has_valid_civic = civic_death_cult
							has_valid_civic = civic_death_cult_corporate
						}
					}
				}
				add_building = building_sacrificial_temple_1
			}
			# 2 jobs
			if = {
				limit = {
					owner = {
						is_spiritualist = yes
						NOT = {
							has_valid_civic = civic_death_cult
						}
					}
				}
				add_building = building_temple
			}
		}
		while = {
			limit = {
				num_pops < 8
				#free_housing > 0
			}
			create_pop = {
				species = owner
			}
		}
		if = {
			limit = {
				is_planet_class = pc_desert
			}
			set_planet_flag = tasty_desert
		}
		remove_all_armies = yes
		solar_system = {
			save_event_target_as = enlightened_system
			if = {
				limit = {
					exists = owner
				}
				owner = {
					save_event_target_as = previous_system_owner
				}
			}
			if = {
				limit = {
					NOT = {
						exists = starbase
					}
				}
				create_starbase = {
					size = starbase_starport
					module = shipyard
					module = shipyard
					owner = prev
				}
			}
		}
	}
	random_controlled_ship = {
		limit = {
			is_ship_size = primitive_space_station
		}
		fleet = {
			destroy_fleet = THIS
		}
	}
	# countries with intel on this system get a notification and establish communications
	every_country = {
		limit = {
			is_country_type_with_subjects = yes
			NOR = {
				AND = {
					exists = event_target:previous_system_owner
					is_same_value = event_target:previous_system_owner
				}
				is_same_value = $OWNER$
			}
			intel_level = {
				level > medium
				system = event_target:enlightened_system
			}
		}
		country_event = {
			id = preftl.1111
			days = 1
			scopes = {
				from = $PRE_FTL$
			}
		}
	}
	if = {
		limit = {
			exists = event_target:previous_system_owner
		}
		establish_communications_no_message = event_target:previous_system_owner
	}
}

#resetal_all_pop
sk_resettle_all_pop = {
	#reroll_random = yes
	owner = {
		random_owned_planet = {
			limit = {
				num_pops > 0
				this = {
					NOT = { is_same_value = prevprevprev }
				}
			}
			save_event_target_as = resettle_target
		}
	}
	every_owned_pop = {
		resettle_pop = {
			pop = this
			planet = event_target:resettle_target
		}
	}
}
create_sk_citadel = {
	create_starbase = {
					
		size = "starbase_citadel"
		module = "shipyard"
		module = "shipyard"
		module = "gun_battery"
		module = "gun_battery"
		module = "gun_battery"
		module = "gun_battery"
		module = "gun_battery"
	
		building = "target_uplink_computer"
		building = "defense_grid"
		building = "colossus_yards"
		building = "titan_yards"
		owner = root.controller
	
		effect = {
			while = {
				count = 4
				create_ship = {
					name = random
					design = "魊II"
				}
			}
		}
	}
}
spawn_sk_fleet = {
	root.controller = {
		create_leader = {
			class = commander
			species = root.owner_main_species
			name = RANDOM
			event_leader = yes
			skill = 10
			set_age = 0
			traits = {
				trait = leader_trait_artillery_specialization_3
				trait = leader_trait_master_gunner
				trait = leader_trait_commanding_presence_3
				trait = leader_trait_artillerist_3
				trait = leader_trait_eater_chosen
			}
		}
	}
	create_fleet = {
		name = "鬿"
		settings = {
			uses_naval_capacity = no
			spawn_debris = no
			can_upgrade = no
			can_change_composition = no
			can_change_leader = no
		}
		effect = {
			set_owner = root.controller
			set_location = prev
			create_ship = {
				name = random
				design = "鬿IV"
				upgradable = no
			}
			while = {
				count = 20
				create_ship = {
					name = random
					design = "鬿III"
					upgradable = no
				}
			}
			add_modifier = {
				modifier = ship_rank_elite
				days = -1
			}
			assign_leader = last_created_leader
		}
	}
}
make_sk_citadel = {
	starbase = {
		set_starbase_size = starbase_citadel
		set_starbase_module = { slot = 1 module = shipyard }
		set_starbase_module = { slot = 2 module = shipyard }
		set_starbase_module = { slot = 3 module = gun_battery }
		set_starbase_module = { slot = 4 module = gun_battery }
		set_starbase_module = { slot = 5 module = gun_battery }
		set_starbase_module = { slot = 6 module = gun_battery }
		
		set_starbase_building = { slot = 1 building = target_uplink_computer }
		set_starbase_building = { slot = 2 building = defense_grid }
		set_starbase_building = { slot = 3 building = colossus_yards }
		set_starbase_building = { slot = 4 building = titan_yards }

		while = {
			count = 4
			create_ship = {
				name = random
				design = "魊II"
			}
		}
	}
}
#魔改堕落转化#####################################################################################################
load_presets = {
	if = { 
		not = { has_modifier = fe_ship_cost_modifier } 
		add_modifier = {
			modifier = fe_ship_cost_modifier
			days = -1
		}
	}
	ruler = {
		add_skill = 9
	}
	add_awakened_fallen_empire_resources = yes
	add_global_ship_design = "魊II"
	add_global_ship_design = "魊I"
	add_global_ship_design = "鬿I"
	add_global_ship_design = "鬿II"
	add_global_ship_design = "鬿III"
	add_global_ship_design = "鬿IV"
	add_global_ship_design = "魇III"

	root.capital_scope = {
		if = {
			limit = {
				NOT = { has_planet_flag = all_resources_added }
			}
			add_all_resources_to_colony = yes
		}
		solar_system = {
			starbase = {
				make_sk_citadel = yes
			}
		}
	}
}
make_sk_fallen_empire = {
	set_country_type = awakened_fallen_empire
	# set_country_flag = cosmogenesis_fe_empire
	give_technology = tech_cosmogenesis_world
	add_awakened_fallen_empire_resources = yes
	if = {
		limit = {
			is_gestalt = no
		}
		change_government = {
			civics = {
				civic = civic_revanchist_fervor
				civic = civic_ancient_caches_of_technology
			}
			remove_invalid_civics = yes
		}
	}
	else_if = {
		limit = {
			is_machine_empire = yes
		}
		change_government = {
			civics = {
				civic = civic_awakened_machine
				civic = civic_final_defense_protocols
			}
			remove_invalid_civics = yes
		}
	}
	else_if = {
		limit = {
			is_hive_empire = yes
		}
		change_government = {
			civics = {
				civic = civic_antediluvian_mind
				civic = civic_sluggish_drones
			}
			remove_invalid_civics = yes
		}
	}

	ruler = {
		add_skill = 9
	}
	set_graphical_culture = fallen_empire_01
	add_global_ship_design = "魊II"
	add_global_ship_design = "魊I"
	add_global_ship_design = "鬿I"
	add_global_ship_design = "鬿II"
	add_global_ship_design = "鬿III"
	add_global_ship_design = "鬿IV"
	add_global_ship_design = "魇III"
	add_global_ship_design = "sk_FE_Starbase"
	
	#	create_fallen_empire_cosmogenesis_navy = yes
	add_modifier = {
		modifier = fe_ship_cost_modifier
		days = -1
	}
	every_system = {
		limit = {
			exists = owner
			owner = {
				is_same_value = root
			}
			OR = {
				NOT = { exists = sector }
				sector = { has_sector_type = normal_sector }
			}
		}
		every_fleet_in_system = {
			limit = {
				is_mobile = no
			}
			destroy_fleet = this
		}
	}

	random_owned_planet = {
		limit = {
			is_capital = yes
		}

		create_sk_fallen_empire_planet = yes
		add_all_resources_to_colony = yes

		create_species = {
			name = "魅"
			class = "Schalebot"
			portrait = "Schale"
			traits = random
			immortal = yes
		}
		#generate_start_pops = yes
		while = {
			count = 50
			random_list = {
				1 = {
					modifier = {
						add = 8
						is_planet_class = pc_habitat
					}
					modifier = {
						add = 4
						is_planet_class = pc_hive
					}
					modifier = {
						add = 4
						is_planet_class = pc_machine
					}
				}
				9 = {
					create_pop = {
						species = random
						ethos = random
					}
				}
			}
		}
	}

#	every_planet_within_border = {
#		limit = {
#			exists = owner
#			is_planet_class = pc_cosmogenesis_world
#		}
#
#		while = {
#			limit = {
#				num_pops > 0
#			}
#			random_owned_pop = {
#				kill_pop = yes
#			}
#		}
#		destroy_colony = yes
#
#		solar_system = {
#			spawn_megastructure = {
#				type = cosmogenesis_world_ruined
#				coords_from = PREV
#			}
#			random_system_planet = {
#				limit = {
#					has_planet_flag = has_cosmogenesis_world
#				}
#				remove_planet_flag = has_cosmogenesis_world
#				remove_planet_flag = has_megastructure
#			}
#		}
#
#		remove_planet = yes
#	}

	every_planet_within_border = {
		limit = {
			exists = sector
			sector = { has_sector_type = core_sector }

			is_colonizable = yes
		}

		create_colony = {
			owner = root
			species = root.species
		#	ethos = random
		}

		create_fallen_empire_planet = yes
	}

	every_system = {
		limit = {
			exists = owner
			owner =  {
				is_same_value = root
			}
			exists = starbase
		}
		make_sk_citadel = yes
	}
}
create_sk_fallen_empire_planet = {

	set_planet_flag = fallen_empire_world

	if = {
		limit = {
			is_artificial = no
			root = {
				is_gestalt = no
			}
		}
		change_pc = pc_city
	}

	if = {
		limit = {
			is_artificial = no
			root = {
				is_hive_empire = yes
			}
		}
		change_pc = pc_hive
	}

	if = {
		limit = {
			is_artificial = no
			root = {
				is_machine_empire = yes
			}
		}
		change_pc = pc_machine
	}

	remove_all_buildings = yes

	if = {
		limit = {
			root = { is_machine_empire = yes }
		}
		add_building = building_ancient_control_center
	}
	if = {
		limit = {
			root = { is_hive_empire = yes }
		}
		add_building = building_ancient_hive_capital
	}
	else = {
		add_building = building_ancient_palace
	}

	add_building = building_fe_stronghold
	if = {
		limit = {
			root = {
				OR = {
					is_gestalt = no
					has_valid_civic = civic_machine_servitor
				}
			}
		}
		add_building = building_affluence_center
		add_building = building_affluence_center
	}
	else = {
		add_building = building_class_4_singularity
		add_building = building_fe_security_2
	}
	add_building = building_nourishment_center
	add_building = building_class_4_singularity
	add_building = building_dimensional_fabricator
	add_building = building_fe_mine_2
	add_building = building_nano_forge
	add_building = building_nano_forge
	add_building = building_fe_dome
	add_building = building_fe_administration_hive_2

	remove_all_districts = yes
	if = {
		limit = {
			is_planet_class = pc_city
		}
		while = {
			limit = {
				free_district_slots > 0
			}
			random_list = {
				3 = { add_district = district_arcology_housing }
				1 = { add_district = district_arcology_arms_industry }
				1 = { add_district = district_arcology_civilian_industry }
				1 = { add_district = district_arcology_leisure }
				1 = { add_district = district_arcology_administrative }
			}
		}
	}
	else_if = {
		limit = {
			is_planet_class = pc_ringworld_habitable
		}
		while = {
			limit = {
				free_district_slots > 0
			}
			random_list = {
				3 = { add_district = district_rw_city }
				1 = { add_district = district_rw_generator }
				1 = { add_district = district_rw_farming }
				1 = { add_district = district_rw_industrial }
			}
		}
	}

	else_if = {
		limit = {
			is_planet_class = pc_habitat
		}
		while = {
			limit = {
				free_district_slots > 0
			}
			add_district = district_hab_housing
		}
	}

	else_if = {
		limit = {
			is_planet_class = pc_hive
		}
		while = {
			limit = {
				free_district_slots > 0
			}
			random_list = {
				3 = { add_district = district_hive }
				1 = { add_district = district_generator_uncapped }
				1 = { add_district = district_mining_uncapped }
				1 = { add_district = district_farming_uncapped }
			}
		}
	}

	else_if = {
		limit = {
			is_planet_class = pc_machine
		}
		while = {
			limit = {
				free_district_slots > 0
			}
			random_list = {
				3 = { add_district = district_nexus}
				1 = { add_district = district_generator_uncapped }
				1 = { add_district = district_mining_uncapped }
				1 = { add_district = district_farming_uncapped }
			}
		}
	}
	while = {
		count = 50
		random_list = {
			1 = {
				modifier = {
					add = 8
					is_planet_class = pc_habitat
				}
				modifier = {
					add = 4
					is_planet_class = pc_hive
				}
				modifier = {
					add = 4
					is_planet_class = pc_machine
				}
			}
			9 = {
				create_pop = {
					species = last_created_species
					ethos = random
				}
			}
		}
	}

	while = {
		count = 20
		random_list = {
			1 = {
				modifier = {
					factor = 0
					exists = owner
					owner = {
						is_machine_empire = no
					}
				}
				create_army = {
					name = random
					owner = root
					species = root
					type = "machine_assault_2"
				}
			}
			1 = {
				modifier = {
					factor = 0
					exists = owner
					owner = {
						NOT = { has_tradition = tr_psionics_finish }
					}
				}
				create_army = {
					name = random
					owner = root
					species = root
					type = "psionic_army"
				}
			}

			1 = {
				modifier = {
					factor = 0
					exists = owner
					owner = {
						NOT = { has_tradition = tr_genetics_finish }
					}
				}
				create_army = {
					name = random
					owner = root
					species = root
					type = "gene_warrior_army"
				}
			}

			1 = {
				modifier = {
					factor = 0
					exists = owner
					owner = {
						OR = {
							has_tradition = tr_genetics_finish
							has_tradition = tr_psionics_finish
							is_machine_empire = yes
						}
					}
				}
				create_army = {
					name = random
					owner = root
					species = root
					type = "xenomorph_army"
				}
			}
		}
	}
}

add_all_resources_to_colony = {
	while = {
		count = 10
		add_deposit = d_minerals_10
		add_deposit = d_food_10
		add_deposit = d_alloys_10
		add_deposit = d_artifacts_planet_3
		#add_deposit = d_trade_value_10
	}
	while = {
		count = 20
		#add_deposit = d_energy_10
		#add_deposit = d_minerals_10
		#add_deposit = d_food_10
		#add_deposit = d_alloys_10
		add_deposit = d_energy_10
		add_deposit = d_vast_unity_deposit
		add_deposit = d_hab_consumer_goods_2
		add_deposit = d_dark_matter_deposit_10
		add_deposit = d_volatile_motes_5
		add_deposit = d_rare_crystals_5
		add_deposit = d_exotic_gases_5
		add_deposit = d_nanites_deposit
		add_deposit = d_zro_deposit_5
		add_deposit = d_zro_deposit_5
		add_deposit = d_sentinels_metal
		#add_deposit = d_trade_value_10
		#while = {
		#	count = 2
		#	add_deposit = d_vast_unity_deposit
		#}
	}
	set_planet_flag = all_resources_added
}
spawn_cosmogenesis_world = {
	this.solar_system = {
		spawn_planet = {
			class = "pc_cosmogenesis_world"
			location = prev
			orbit_location = yes
			orbit_angle_offset = 45
			orbit_distance_offset = 19.799
			plane_offset = 5
			size = 2
			has_ring = no
	
			init_effect = {
				set_name = {
					key = pc_cosmogenesis_world
				}
				set_planet_entity = {
					entity = "neural_calculator_phase_1_entity"
				}
				set_surveyed = {
					surveyed = yes
					surveyor = FROM
				}
				set_all_comms_surveyed = yes
				clear_blockers = yes
	
				# set_planet_flag = megastructure
				# set_planet_flag = cosmogenesis_world_resettle@from
	
				prev = {
					# set_planet_flag = has_megastructure
					# set_planet_flag = has_cosmogenesis_world
					if = {
						limit = { has_orbital_station = yes }
						orbital_station = {
							dismantle = yes
						}
					}
				}
	
				set_owner = prev.controller
				set_controller = prev.controller
				create_pop = {
					species = root.species
				}
				from = {
					room_name_override = ""
				}
			}
		}	
	}
}
assult_on_planet = {
	change_pc = pc_continental
	create_species = {
		name = "魅"
		class = "Schalebot"
		portrait = "Schale"
		traits = random
		immortal = yes
	}
	create_late_pre_ftl_empire = yes
	setup_pre_ftl_planet = yes
	create_country = {
		name = "魊"
		type = default
		ignore_initial_colony_error = yes
		authority = auth_democratic
		civic = random
		species = last_created_species
		ethos = random
		flag = random
		set_graphical_culture = "cybernetics_01"
		effect = {
			sk_achieve_ftl_effect = yes
			set_country_type = sk_awakened_fallen_empire
			add_global_ship_design = "魊II"
			add_global_ship_design = "魊I"
			add_global_ship_design = "鬿I"
			add_global_ship_design = "鬿II"
			add_global_ship_design = "鬿III"
			add_global_ship_design = "鬿IV"
			add_global_ship_design = "魇III"
			add_global_ship_design = "sk_FE_Starbase"
			add_awakened_fallen_empire_resources = yes
		}
	}
	create_sk_marauder_constructors = yes
	create_sk_warship_fleet = yes
	solar_system = { 
		if = {
			limit = { exists = starbase }
			starbase = { fleet = { destroy_fleet = this } }
			create_sk_citadel = yes 
		}
	}
}