namespace = sk
####################################################################
############################ 开局助手 ##############################
####################################################################
country_event = {
	id = sk.10
	title = sk.10.title
	desc = sk.10.desc
	picture_event_data = {
		room = no_video_feed_room
	}
	mean_time_to_happen = {
		months = 5
	}
	trigger = {
		is_ai = no
		NOT = { has_country_flag = sk_step_0 }

	}
	immediate = {
		set_country_flag = sk_step_0
	}
	option = {
		name = sk.10.a
		country_event = {
			id = sk.1000
		}
	}
}

country_event = {
    id = sk.1000
    title = sk.1000.title
    desc = sk.1000.desc
	diplomatic = yes

	is_triggered_only = yes

	picture = GFX_leader_recruitment_bg_renowned
	event_window_type = leader_recruit

	immediate = {
		create_leader = {
			class = commander
			name = "鬿"
			species = this
			skill = 10
			traits = {
				trait = leader_trait_artillery_specialization_3
				trait = leader_trait_master_gunner
				trait = leader_trait_commanding_presence_3
				trait = leader_trait_artillerist_3
				trait = leader_trait_eater_chosen
			}
		}
	}

	picture_event_data = {
		portrait = last_created_leader
		room = galactic_custodian_room
	}
    
	option = {
		name = sk.1000.a
		response_text = sk.1000.a.r
		is_dialog_only = yes
		set_country_flag = sk_dialog_step_1
	}
	option = {
		name = sk.1000.b
		allow = {
			has_country_flag = sk_dialog_step_1
		}
		response_text = sk.1000.b.r
		is_dialog_only = yes
		hide_option_if_not_allowed = yes
		set_country_flag = sk_dialog_step_2
	}
	option = {
		name = sk.1000.c
		allow = {
			has_country_flag = sk_dialog_step_2
		}
		response_text = sk.1000.c.r
		is_dialog_only = yes
		hide_option_if_not_allowed = yes
		set_country_flag = sk_dialog_step_3
	}
    option = {
        name = sk.1000.d
		allow = {
			has_country_flag = sk_dialog_step_3
		}
		hide_option_if_not_allowed = yes
		set_country_flag = sk_dialog_step_50
        hidden_effect = {
			country_event = {
				id = sk.1005
			}
			remove_country_flag = sk_dialog_step_1
			remove_country_flag = sk_dialog_step_2
			remove_country_flag = sk_dialog_step_3
			add_resource = { energy = -50 }
            create_fleet = {
				name = "鬿"
				settings = {
					uses_naval_capacity = no
					can_upgrade = no
					spawn_debris = no
					can_change_leader = no
				}
				effect = {
					set_owner = prev
					set_location = {
						target = root.capital_scope
						distance = 10
						angle = random
					}
					while = {
						count = 1
						create_ship = {
							name = random
							design = "魊II"
							prefix = no
							upgradable = no
						}
					}
					#assign_leader = last_created_leader
					#add_modifier = { modifier = "sk_ship_modifier" }
				}
			}
        }
    }
	option = {
        name = sk.1000.e
		allow = {
			has_country_flag = sk_dialog_step_3
		}
		hide_option_if_not_allowed = yes

		hidden_effect = { 
			country_event = {
				id = sk.1010
			}
			remove_country_flag = sk_dialog_step_1
			remove_country_flag = sk_dialog_step_2
			remove_country_flag = sk_dialog_step_3
			remove_global_flag = gray_goo_crisis_set
			remove_global_flag = active_gray_goo
			remove_global_flag = dragon_season
			remove_global_flag = gray_goo_empire_set 
			set_global_flag = gray_goo_crisis_set
			set_global_flag = active_gray_goo
		}
	}
}
country_event = {
    id = sk.1005
	title = TRANSMISSION
    desc = sk.1005.desc
	option = {
		name = sk.1005.a
		hidden_effect = { 
			last_created_leader = {
				kill_leader = {
					show_notification = no
				}
			}
			country_event = {
				id = sk.499
			}
			if = {
				limit = {
					NOT = { has_country_flag = sk_dialog_step_f }
				}
				set_country_flag = sk_dialog_step_f
			}
			remove_country_flag = sk_dialog_step_50
		}
	}
	diplomatic = yes
	picture_event_data = {
		portrait = last_created_leader
		room = galactic_custodian_room
	}

    is_triggered_only = yes
}
country_event = {
    id = sk.1010
	title = TRANSMISSION
    desc = sk.1010.desc
	diplomatic = yes
	picture_event_data = {
		portrait = last_created_leader
		room = galactic_custodian_room
	}
	option = {
		name = sk.1010.a
		hidden_effect = { 
			last_created_leader = {
				kill_leader = {
					show_notification = no
				}
			}
			if = {
				limit = {
					NOT = { has_country_flag = sk_dialog_step_ff }
				}
				set_country_flag = sk_dialog_step_ff
			}
		}
	}
	

    is_triggered_only = yes
}
# Create 
country_event = {
	id = sk.499
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		create_country = {
			name = "NAME_SK"
			type = senki
			flag = random
		}
		last_created_country = {
			establish_communications_no_message = root
			create_leader = {
				class = commander
				species = root.owner_main_species
				name = RANDOM
				event_leader = yes
				skill = 10
				set_age = 0
				traits = {
					trait = leader_trait_artillery_specialization_3
					trait = leader_trait_master_gunner
					trait = leader_trait_commanding_presence_3
					trait = leader_trait_artillerist_3
					trait = leader_trait_eater_chosen
				}
			}
			set_leader = last_created_leader
			save_global_event_target_as = sk_country
		}
		save_global_event_target_as = sk_owner
	}
}

# Main Menu (Initial)
country_event = {
	id = sk.500
	title = "sk.500.title"
	desc = "sk.500.a.desc"
	desc = "sk.500.b.desc"
	desc = "sk.500.c.desc"
	desc = "sk.500.d.desc"

	diplomatic = yes
	picture = GFX_evt_mysterious_signal
	picture_event_data = {
		portrait = from.ruler
		room = root
	}

	is_triggered_only = yes

	trigger = {
		NOT = { has_country_flag = sk_diplomacy_engaged }
	}

	immediate = {
		set_country_flag = sk_diplomacy_engaged
	}

	after = {
		hidden_effect = { remove_country_flag = sk_diplomacy_engaged }
	}

	trigger = {
		from = { is_country_type = senki }
		is_same_value = event_target:sk_owner
		NOR = {
			has_country_flag = sk_reforming
		}
	}
	

	option = { # 背景补充
		name = sk.500.a
		response_text = sk.500.a.response
	}
	option = { # 军用舰队
		name = sk.500.b
		response_text = sk.500.b.response
		trigger = {
			event_target:sk_owner = {
				NOR = {
					exists = event_target:sk_fleet
					has_country_flag = sk_reforming
				} 
			}
		}
		hidden_effect = {
			event_target:sk_owner = {
				set_country_flag = sk_warship_active
			} 
			create_sk_warship_fleet = yes
		}
	}
	option = { # 小修正
		name = sk.500.c
		response_text = sk.500.c.response
		hidden_effect = {
			root = {
				add_modifier = {
					modifier = sk_country_modifier
				}
			}
		}
	}
	option = { # 大修正
		name = sk.500.d
		response_text = sk.500.c.response
		#trigger = {
		#	NOT = { has_country_flag = sk_army_active }
		#}
		hidden_effect = {
			root = {
				add_modifier = {
					modifier = sk_ultimate_country_modifier
				}
			}
		}
	}
	option = {
		name = sk.500.f
		response_text = sk.500.f.response
		hidden_effect = {
			
			set_global_flag =  sk_pirate_false
		} 
			
	}
	option = { # 啥也没有
		name = sk.500.e
		default_hide_option = yes
	}
}
event = {#失去舰队触发器 月度检查
	id = sk.510
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		any_country = { is_country_type = senki }
		exists = event_target:sk_owner
		event_target:sk_owner = {
			AND = {
				has_country_flag = sk_warship_active
				event_target:sk_fleet = {
					NOT = {
						is_owned_by =  event_target:sk_owner
					}
				}
				#NOT = { exists = event_target:sk_fleet }
			}
		}
	}

	immediate = {
		if = {
			limit = { exists = event_target:sk_fleet}
			event_target:sk_fleet = {
				destroy_fleet = THIS
			}
		}
		event_target:sk_owner = {
			remove_country_flag = sk_warship_active
			set_timed_country_flag = {
				flag = sk_reforming
				days = 180
			}
			country_event = { id = sk.511 }
		}
	}
}
country_event = {#失去舰队提示
	id = sk.511
	title = "sk.511.name"
	desc = "sk.511.desc"
	picture = GFX_evt_circuitry_modification
	show_sound = event_radio_chatter

	is_triggered_only = yes

	option = {
		name = sk.511.a
	}
}
#country_event = {#延时移除flag  更正:使用timed_flag解决了
#	id = sk.512
#	hide_window = yes
#
#	is_triggered_only = yes
#	immediate = {
#		event_target:sk_owner = {
#			remove_country_flag = sk_reforming
#		}
#	}
#}
###########################################################
####################### 叛乱事件 ##########################
###########################################################

#################################################################
########################### 天灾先导 #############################
#################################################################

country_event = {
	id = sk.299
	hide_window = yes
	mean_time_to_happen = {
		years = 5
	}
	trigger = {
		is_ai = no
		NOT = {
			has_global_flag = sk_pirate_invading 
			has_global_flag = sk_pirate_false
		}
		mid_game_years_passed >= 1
		#end_game_years_passed < 0 末期这玩意强度似乎不太够?换成别的模式吧
	}
	immediate = {
		# 保证20个月内不会快速触发(20个月是不是太短了?)
		set_timed_global_flag = {
			flag = sk_pirate_invading
			months = 20
		}
		random_country = {
			limit = {
				is_country_type = default
			}
			capital_scope = {
				save_event_target_as = sk_target_planet
				#solar_system = { save_event_target_as = capital_system }
			}
			# 舰队初始星系和初始行星位置
			random_system_within_border = {
				save_event_target_as = sk_pirate_system
				random_system_planet = {
					save_event_target_as = sk_pirate_home
				}
			}	
			save_event_target_as = sk_pirate_target
			#owner_species = { save_event_target_as = owner_species }
			# 统计目标国家舰队实力
			export_trigger_value_to_variable = {
				trigger = fleet_power
				variable = var_fleet_power
			}
			#舰队实力的比例
			multiply_variable = { 
				which = var_fleet_power
				value = 0.3
			}
			ceiling_variable = var_fleet_power
			# 第一次触发时创建国家并全部宣战
			if = { 
				limit = { 
					NOT = {
						has_global_flag = sk_pirate_existed
					}
				}
				set_global_flag = sk_pirate_existed
				create_species = {
					name = "魊"
					class = "Schalebot"		# 短期内差不多无了
					portrait = "Schale"		# 这是另一个mod里的portrait,3.12之后好像portrait不能全部machine,要么等修复要么换一下
					traits = random
					immortal = yes
					effect = {
						save_event_target_as = sk_pirate_species
					}
				}	
				create_country = {
					name = "NAME_sk_Pirates"
					type = sk_pirate
					species = event_target:sk_pirate_species
					name_list = "PRT1"
					ethos = random
					flag = {
						icon= {
							category = "special"
							file = random
						}
						background = {
							category = "backgrounds"
							file = "00_solid.dds"
						}
						colors ={
							"red"
							"black"
							"null"
							"null"
						}
					}
					effect = {
						#set_ai_personality = berserk_fallen_empire_machine
						
						create_ship_design = { design = "魊I" }
						add_ship_design = last_created_design
						create_ship_design = { design = "魊II" }
						add_ship_design = last_created_design
						create_ship_design = { design = "鬿I" }
						add_ship_design = last_created_design
						create_ship_design = { design = "鬿II" }
						add_ship_design = last_created_design
						create_ship_design = { design = "鬿III" }
						add_ship_design = last_created_design
						create_ship_design = { design = "鬿V" }
						add_ship_design = last_created_design			
						ruler = {
							add_skill = 9
						}
						save_global_event_target_as = sk_pirate_band
						add_modifier = {
							modifier = sk_event_ship_modifier
						}
						set_graphical_culture = "ai_01"
						set_faction_hostility = {
							set_hostile = yes
							set_neutral = no
							set_friendly = no
						}
						set_name = random
						randomize_flag_symbol = yes
						every_country = {
							establish_communications_no_message = prev
						}
					}
				}
				# 蠢驴完蛋操的不宣战就不能用轨道轰炸，注册天灾国家还要覆盖文件一大堆兼容问题
				every_country = {
					limit = {
						OR = {
							is_country_type = default
						}
					}
					declare_war = {
						target = event_target:sk_pirate_band
						attacker_war_goal = wg_declared_crisis
					}
				}	
			}
		}
		# 根据变量运算结果创建舰队
		event_target:sk_pirate_band = {
			create_leader = {
				class = commander
				species = owner_main_species
				name = random
				skill = 5
			}
			create_fleet = {
				name = "NAME_sk_Pirate_Fleet"
				settings = {
					can_upgrade = no
					spawn_debris = no
					can_change_leader = no
				}
				effect = {
					set_owner = event_target:sk_pirate_band
					create_sk_pirate_fleet_2 = {
						FLEET_POWER = event_target:sk_pirate_target.var_fleet_power
					}  #自己写的报错是正常的
					#create_sk_pirate_fleet = yes
					save_event_target_as = sk_pirate_fleet
					set_fleet_flag = sk_pirate_fleet
					set_location = event_target:sk_pirate_home
					set_fleet_stance = aggressive
					assign_leader = last_created_leader
					set_aggro_range = 800
					set_aggro_range_measure_from = self
					set_fleet_bombardment_stance = sk_armageddon   #空投登陆，5%破坏度空投一批
					# 硬指定寻路逻辑
					auto_move_to_planet = {
						target = event_target:sk_target_planet
						clear_auto_move_on_arrival = yes
					}
				
				}
			}
		}
		# 脉冲寻路先导事件
		event_target:sk_pirate_fleet = {
			fleet_event = {
				id = sk.605
				days = 45
			}
		}
		# 舰队实力不到100k不生成二级突触，100k到150k30%二级，150k以上一级概率权重削弱70%
		event_target:sk_pirate_target = {
			if = { #这个域是触发国家
				limit = { 
					fleet_power > 60000
				}
				random_list = {
					70 = {
						modifier = {
							fleet_power > 150000
							factor = 0.3
						}
						create_sk_pirate_base_1 = yes 
					}
					30 = {
						modifier = {
							fleet_power <= 100000
							factor = 0
						}
						create_sk_pirate_base_2 = yes
					}
				}
			}
		}
		# 清除变量，全局提示
		clear_variable = var_fleet_power
		every_country = {
			limit = {
				is_ai = no
			}
			country_event = { id = sk.300 }
		}
	}
}

#全局提示
country_event = {
	id = sk.300
	title = sk.300.title
	desc = sk.300.desc
	picture = GFX_evt_pirate_armada
	show_sound = event_space_battle
	location = event_target:sk_pirate_home 

	is_triggered_only = yes

	option = {
		name = sk.300.a
	}
}
###################################################################
########################### 登陆轰炸 ##############################
###################################################################
# Fired by on_planet_bombarded
# This = Planet
# From = Bombarder
planet_event = {
	id = sk.310
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_orbital_bombardment_stance = sk_armageddon
		OR = {
			AND = {
				planet_devastation >= 5
				NOT = { is_variable_set = sk_armageddon_army }
			}
			AND = {
				is_variable_set = sk_armageddon_army
				check_variable_arithmetic = {
					which = sk_armageddon_army
					add = 1
					divide = trigger:planet_devastation
					value <= 0.2
				}
			}
		}
	}

	immediate = {
		if = {
			limit = { 
				NOT = {
					has_planet_flag = sk_armageddon_bombared
				}
			}
			set_planet_flag = sk_armageddon_bombared
		}
		# Set variables
		if = {
			limit = {
				NOT = { is_variable_set = sk_armageddon_army }
			}
			set_variable = {
				which = sk_armageddon_army
				value = 1
			}
		}
		else = {
			change_variable = {
				which = sk_armageddon_army
				value = 1
			}
		}
		# Add army
		if = {
			limit = { 
				from = {
					is_country_type = sk_pirate
				}
			}
			from = {
				set_country_flag = sk_armageddon_bombarder_country
			}
			while = {
				count = 3
				create_army = {
					name = random
					owner = from
					type = "sk_landing_force" #魃
				}
			}
		}
		else_if = {
			limit = { 
				from = {
					resource_stockpile_compare = {
						resource = minerals
						value >= 600
					}
				}
			}
			from = {
				add_resource = {
					minerals = -600
				}
				#save_event_target_as = sk_armageddon_bombarder
				set_country_flag = sk_armageddon_bombarder_country
			}
			while = {
				count = 3
				create_army = {
					name = random
					owner = from
					type = "sk_landing_force" #魃
				}
			}
		}
	}
}

# on_planet_attackers_win

country_event = {
	id = sk.315
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		fromfrom = {
			has_planet_flag = sk_armageddon_bombared
		}
	}
	# 清除登陆部队
	immediate = {
		this = {
			save_event_target_as = sk_attacker
			every_owned_army = {
				limit = {
					army_type = sk_landing_force
				}
				remove_army = yes
			}
		}
	}
	#创建防御部队
	after = {
		fromfrom = {
			remove_planet_flag = sk_armageddon_bombared
			export_trigger_value_to_variable = {
				trigger = num_pops
				variable = var_pops
			}
			divide_variable = {
				which = var_pops
				value = 15
			}
			ceiling_variable = var_pops

			#add_building = sk_building_capital
			while = {
				count = var_pops
				create_army = {
					owner = event_target:sk_attacker
					type = sk_machine_planet_guardian
				}
			}
			
			#创建人口

			while = {
				count = var_pops
				create_pop = {
					species = event_target:sk_attacker.species
				}
			}

			clear_variable = var_pops
			clear_variable = sk_armageddon_army
		}
	}
}
####################################################################
############################## 幻景盖亚 ############################
####################################################################
# 等会写个裂隙事件送需要的科技
# 算了裂隙好麻烦,待会移植到科技树里
event = {
	id = sk.397
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_global_flag = sk_gaia_chosen
		}
		any_country = {
			is_ai = no
			has_technology = tech_sk_gaia_reform
		}
	}

	immediate = {
		set_global_flag = sk_gaia_chosen
		every_country = {
			limit = {
				is_ai = no
				has_technology = tech_sk_gaia_reform
			}
			set_country_flag = first_sk_gaia
			country_event = {
				id = sk.398 days = 1825
			}
		}
	}
}

country_event = {
	id = sk.398
	title = sk.398.title
	desc = sk.398.desc
	picture = GFX_evt_ship_in_orbit_3

	is_triggered_only = yes
	
	immediate = {
		random_system_within_border = {
			random_system_planet = {
				limit = {
					uninhabitable_regular_planet = yes
				}
				save_event_target_as = sk_gaia_change_candidate
				enable_special_project = {
					name = "sk_gaia_forming"
					location = this
					owner = root
				}
			}
		}
	}
	location = event_target:sk_gaia_change_candidate

	option = {
		name = sk.398.a
	}
}

country_event = {
	id = sk.399
	title = sk.399.title
	desc = sk.399.desc
	picture = GFX_evt_astral_scar
	location = event_target:sk_changed_gaia

	is_triggered_only = yes 
	option = {
		name = sk.399.a
	}
}

planet_event = {
	id = sk.400
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_planet_flag = sk_changed_gaia
		if = {
			limit = {
				NOT = { is_planet_class = pc_shattered_2 }
			}
			save_event_target_as = sk_changed_gaia
			solar_system.owner = {
				country_event = {
					id = sk.405 days = 10585
				} 
				country_event = {
					id = sk.410 days = 10950
				}
				country_event = {
					id = sk.399 days = 1
				}
			} 
			planet_event = {
				id = sk.415 days = 10950
			}
			change_pc = pc_gaia
			add_modifier = {
				modifier = sk_planet_modifier_temp
				days = 10950
			}
			while = {
				count = 15
				add_deposit = d_energy_10
				add_deposit = d_minerals_10
				add_deposit = d_food_10
				add_deposit = d_alloys_10
				add_deposit = d_dark_matter_deposit_10
				add_deposit = d_volatile_motes_5
				add_deposit = d_rare_crystals_5
				add_deposit = d_exotic_gases_5
				add_deposit = d_nanites_deposit
				add_deposit = d_zro_deposit_5
				add_deposit = d_zro_deposit_5
				add_deposit = d_sentinels_metal
				while = {
					count = 3
					add_deposit = d_society_10
					add_deposit = d_physics_10
					add_deposit = d_engineering_10
				}
				while = {
					count = 2
					add_deposit = d_vast_unity_deposit
				}
			}
		}
	}
}

country_event = {
	id = sk.405
	title = sk.405.title
	desc = sk.405.desc
	picture = GFX_evt_astral_scar
	location = event_target:sk_changed_gaia

	is_triggered_only = yes 
	option = {
		name = sk.405.a
	}
}

country_event = {
	id = sk.410
	title = "sk.410.title"
	desc = "sk.410.desc"
	picture = GFX_evt_crashed_station
	is_triggered_only = yes
	location = event_target:sk_changed_gaia
	option = {
		name = sk.410.a
	}
}

planet_event = {
	id = sk.415
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		remove_global_flag = sk_gaia_chosen
		remove_planet_flag = sk_changed_gaia
		event_target:sk_changed_gaia = {
			remove_modifier = sk_planet_modifier_temp
			change_pc = pc_shattered_2
			clear_deposits = yes
			add_deposit = d_physics_10
		}
	}
}

#############################################################
#################亚空间城邦舰队移动逻辑######################
#############################################################
##占位*600
# 进攻型策略重置舰队移动目标
fleet_event = {
	id = sk.600
	hide_window = yes 
	is_triggered_only = yes

	immediate = {
		set_timed_fleet_flag = {
			flag = sk_pirate_move_complete
			days = 180
		}
		solar_system = {
			if = {
				limit = { 
					any_system_planet = {
						is_colony = yes
						NOT = {
							is_controlled_by = root.owner
						}
					}
				}
				random_system_planet = {
					limit = {
						is_colony = yes
						NOT = {
							is_owned_by = root.owner
						}
					}
					save_event_target_as = sk_fleet_new_location
				}
			}
			else = {
				closest_system = {
					limit = {
						NOR = {
							is_owned_by = prevprev.owner
							any_fleet_in_system = {
								has_fleet_flag = sk_pirate_fleet
							}
						}
						OR = {
							AND = {
								any_system_planet = {
									is_colony = yes
									NOT = {
										is_controlled_by = root.owner
									}
								}
							}
							AND = {
								any_system_planet = {
									is_colony = no
									is_colonizable = yes
								}
							}
						}
					}
					if = {
						limit = { 
							any_system_planet = {
								is_colony = yes
								NOT = {
									is_controlled_by = root.owner
								}
							}
						}
						random_system_planet = {
							limit = {
								is_colony = yes
								NOT = {
									is_controlled_by = root.owner
								}
							}
							save_event_target_as = sk_fleet_new_location
						}	
					}
					#else = {
					#	star = {
					#		# 这不是设置target了么
					#		save_event_target_as = sk_fleet_new_location
					#	}
					#}
				}	
			}
		}
		auto_move_to_planet = {
			target = event_target:sk_fleet_new_location
			clear_auto_move_on_arrival = yes
		}
	}
}
#什么几把事件，刚刚设置的target就不认了（待测试）
fleet_event = {
	id = sk.605
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				# 正常情况下，如果任务一直顺利，这个事件是没有效果的
				NOT = {
					has_fleet_flag = sk_pirate_move_complete
				}
			}
			# 如果没有执行成功，立刻触发一次600事件以重置目标星球
			fleet_event = {
				id = sk.600
			}
		}
		else_if = {
			limit = { 
				is_ship_size = sk_behemoth
			}
			fleet_event = {
				id = sk.610
			}
		}
	}
	#180刻循环触发
	after = {
		fleet_event = {
			id = sk.605
			days = 90
		}
	}
}

fleet_event = {
	id = sk.610
	hide_window = yes 
	is_triggered_only = yes

	immediate = {
		set_timed_fleet_flag = {
			flag = sk_pirate_construction_move_complete
			days = 180
		}
		solar_system = {
			if = {
				limit = { 
					NOT={ exists = starbase }
				}
				star = {
					save_event_target_as = sk_fleet_new_location
				}
			}
			else = {
				closest_system = {
					limit = {
						NOR = {
							is_owned_by = prevprev.owner
							any_fleet_in_system = {
								controller = {
									is_hostile_to = root.owner
								}
							}
						}
					}
					star = {
						save_event_target_as = sk_fleet_new_location
					}	
				}
			}	
		}
		auto_move_to_planet = {
			target = event_target:sk_fleet_new_location
			clear_auto_move_on_arrival = yes
		}
	}
}

#####################################################################
####################亚空间城邦恒星基地创建###########################
#####################################################################
###占位*700

##triggered by on_fleet_enter_orbit
fleet_event = {
	id = sk.700
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		solar_system = {
			if = {
				limit = {
					any_fleet_in_system = {
						is_ship_size = sk_behemoth
					}
					NOT={ exists = starbase }	
				}
				solar_system = { create_sk_citadel = yes }  
			}
		}
	}
}